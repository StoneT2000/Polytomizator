function ind(i,n){return(n*d*cWidth+i)*d*4}function changePixels3(i,n){displayImage=!0,displayTriangulation=!1,displayPoints=!1,edgePoints=[],i||(i="smooth");var e=JSON.parse(JSON.stringify(n));for(k=0;k<=cWidth;k+=1)for(j=0;j<=cHeight;j+=1){var r=[ind(k-1,j-1),ind(k,j-1),ind(k+1,j-1),ind(k-1,j),ind(k,j),ind(k+1,j),ind(k-1,j+1),ind(k,j+1),ind(k+1,j+1)],d=smoothAvg3(k,j,n,i);e[r[4]]=d[0],e[r[4]+1]=d[1],e[r[4]+2]=d[2]}return e}function smoothAvg3(n,e,r,d){var t=[ind(n-1,e-1),ind(n,e-1),ind(n+1,e-1),ind(n-1,e),ind(n,e),ind(n+1,e),ind(n-1,e+1),ind(n,e+1),ind(n+1,e+1)],o=[1,1,1,1,1,1,1,1,1];o=operator3[d].arr;var a=[0,0,0],s=1;if("blur"==operator3[d].type)for(ic=0;ic<o.length;ic++)s+=Math.abs(o[ic]);for(i=0;i<t.length;i++)a[0]+=r[t[i]]*o[i],a[1]+=r[t[i]+1]*o[i],a[2]+=r[t[i]+2]*o[i];return a[0]/=s,a[1]/=s,a[2]/=s,"edge"==d&&a[0]>=10&&Math.random(0,1)<.2&&edgePoints.push([n,e,a[0]]),a}function changePixels5(i){i||(i="smooth");var n=JSON.parse(JSON.stringify(pixels));for(k=0;k<=cWidth;k+=1)for(j=0;j<=cHeight;j+=1){var e=[ind(k-2,j-2),ind(k-1,j-2),ind(k,j-2),ind(k+1,j-2),ind(k+2,j-2),ind(k-2,j-1),ind(k-1,j-1),ind(k,j-1),ind(k+1,j-1),ind(k+2,j-1),ind(k-2,j),ind(k-1,j),ind(k,j),ind(k+1,j),ind(k+2,j),ind(k-2,j+1),ind(k-1,j+1),ind(k,j+1),ind(k+1,j+1),ind(k+2,j+1),ind(k-2,j+2),ind(k-1,j+2),ind(k,j+2),ind(k+1,j+2),ind(k+2,j+2)],r=smoothAvg3(k,j,pixels,i);n[e[12]]=r[0],n[e[12]+1]=r[1],n[e[12]+2]=r[2]}copyTo(n,pixels),updatePixels()}function smoothAvg5(n,e,r,d){var t=[ind(k-2,j-2),ind(k-1,j-2),ind(k,j-2),ind(k+1,j-2),ind(k+2,j-2),ind(k-2,j-1),ind(k-1,j-1),ind(k,j-1),ind(k+1,j-1),ind(k+2,j-1),ind(k-2,j),ind(k-1,j),ind(k,j),ind(k+1,j),ind(k+2,j),ind(k-2,j+1),ind(k-1,j+1),ind(k,j+1),ind(k+1,j+1),ind(k+2,j+1),ind(k-2,j+2),ind(k-1,j+2),ind(k,j+2),ind(k+1,j+2),ind(k+2,j+2)],o=[1,1,1,1,1,1,1,1,1];o=operator5[d].arr;var a=[0,0,0],s=1;for("blur"==operator5[d].type&&(s=operator5[d].sum),i=0;i<t.length;i++)a[0]+=r[t[i]]*o[i],a[1]+=r[t[i]+1]*o[i],a[2]+=r[t[i]+2]*o[i];return a[0]/=s,a[1]/=s,a[2]/=s,a}function copyTo(i,n,e){if(e)for(index=0;index<n.length;index++)n.push(i[index]);else for(index=0;index<n.length;index++)n[index]=i[index]}function ind1(i,n){return(n*d*cWidth+i)*d}function edgeGradientAngle(i,n,e){var r=smoothAvg3(i,n,e,"sobelX")[0],d=smoothAvg3(i,n,e,"sobelY")[0];return[r*r+d*d,roundAngle(atan(d/r))]}function roundAngle(i){var n=3*Math.PI/8,e=Math.PI/8,r=-Math.PI/8,d=-3*Math.PI/8;return i>n||i<d?0:i>e?1:i<r?3:2}function generateEGA(i){filter(GRAY),loadPixels();var n=[],e=millis();for(ip=0;ip<cWidth;ip++)for(jp=0;jp<cHeight;jp++)n.push(edgeGradientAngle(jp,ip,i));return console.log("Time: "+(millis()-e)),n}function supress(i,n,e){var r=ind1(i,n),d=neighborhoodIndices(i,n,1),t=[],o=e[r][0],a=e[r][1];for(console.log(d),locIndex=0;locIndex<d.length;locIndex++)e[d[locIndex]][1]==a&&t.push(e[d[locIndex]]);for(console.log(t),it=0;it<t.length;it++)console.log(t[0]),o<t[it][0]&&console.log("Not Local Max!",o);console.log(t,"Local Max!",e[r])}function neighborhoodIndices(n,e,r){var d=[];for(i=-r;i<=r;i++)for(j=-r;j<=r;j++)d.push(ind1(j+e,i+n));return d}function reduceDensity(i){for(bright=256;bright>=i;bright--){var n=edgePoints.filter(function(i){if(i[2]==bright)return!0});for(r=0;r<n.length;r++){var e=hashCoordinate(n[r][0],n[r][1]),d=findIndexFromHash(e),t=verticesHashTable[d];for(pindex=0;pindex<t.length;pindex++)n[r][0]!=t[pindex][0]&&squaredist(n[r][0],n[r][1],t[pindex][0],t[pindex][1])<=100&&(verticesHashTable[d][pindex][0]=-10);for(var o=0;o<verticesHashTable[d].length;)-10==verticesHashTable[d][o][0]?verticesHashTable[d].splice(o,1):o++}}}function basicReduceDensity(){for(bright=256;bright>=0;bright--)edgePoints.filter(function(i){if(i[2]==bright)return!0})}var edgePointsHashTable,edgePoints=[],colorThreshold=40,operator3={smooth:{arr:[1,1,1,1,1,1,1,1,1],type:"blur"},edge:{arr:[0,1,0,1,-4,1,0,1,0],type:"filter"},edgeLR:{arr:[0,-1,0,0,2,0,0,-1,0],type:"filter"},edgeUD:{arr:[0,0,0,-1,2,-1,0,0,0],type:"filter"},sharpen:{arr:[0,-1,0,-1,5,-1,0,-1,0],type:"filter"},gaussian:{arr:[1,2,1,2,4,2,1,2,1],type:"blur"},sobelX:{arr:[1,2,1,0,0,0,-1,-2,-1],type:"filter"},sobelY:{arr:[1,0,-1,2,0,-2,1,0,-1],type:"filter"},gx:{arr:[-1,-1,-1,0,0,0,1,1,1],type:"filter"},gy:{arr:[-1,0,1,-1,0,1,-1,0,1],type:"filter"}},operator5={smooth:{arr:[1,1,1,1,1,1,1,1,1],type:"blur",sum:25},gaussian:{arr:[1,4,7,4,1,4,16,26,16,4,7,26,41,26,7,4,16,26,16,4,1,4,7,4,1],type:"blur",sum:273}};