function hashCoordinate(e,a){return 100*floor(e/hashing_size)+floor(a/hashing_size)}function findIndexFromHash(e){return floor(e/100)+e%100*ceil(cWidth/hashing_size)}function generateHashSpace(){totalpoints=0,verticesCanvasLayer.clear(),verticesHashTable=[];for(var e=0;e<=ceil(cWidth/hashing_size+1)*ceil(cHeight/hashing_size+1);e++)verticesHashTable.push([])}function updateHashSpace(e,a,s,t){var i=findIndexFromHash(hashCoordinate(e,a));if(1==s&&(verticesHashTable[i].push([e,a,t]),verticesCanvasLayer.ellipse(e,a,5,5),totalpoints++),0==s)for(var r=0;r<verticesHashTable[i].length;r++)if(verticesHashTable[i][r][0]==e&&verticesHashTable[i][r][1]==a){verticesHashTable[i].splice(r,1),totalpoints--;verticesCanvasLayer.elt.getContext("2d").clearRect(e-5,a-5,10,10)}}function draw_all_points(e,a){e.fill(255),e.stroke(1);for(var s=0;s<a.length;s++)for(var t=0;t<a[s].length;t++)e.ellipse(a[s][t][0],a[s][t][1],5,5)}function unique_vertex(e,a){for(var s=findIndexFromHash(hashCoordinate(e,a)),t=0;t<verticesHashTable[s].length;t++)if(verticesHashTable[s][t][0]==e&&verticesHashTable[s][t][1]==a)return!1;return!0}function keyPressed(e){if(68===keyCode)triangulate_and_display();else if(67===keyCode)if(!1===noColors?(noColors=!0,css_buttons.displayColor(!1)):(noColors=!1,css_buttons.displayColor(!0)),flowerEffect);else for(var a=0;a<triangulations.length;a++)delaunayDisplay(triangulations[a],triangleCanvasLayer);else 80===keyCode?(mode=1,removeClassFromBrushes("active"),$("#pointBrush").addClass("active")):69===keyCode?(mode=3,removeClassFromBrushes("active"),$("#eraser").addClass("active")):66===keyCode&&(mode=2,removeClassFromBrushes("active"),$("#lineBrush").addClass("active"))}function triangulate_and_display(){triangulize(),finishedColoring=!1,flowerEffect&&(flower_step=0,flowering=!0),image(img1,0,0,cWidth,cHeight),noColors=!1,css_buttons.displayColor(!0),displayPoints=!1,css_buttons.displayPoints(!1),loadPixels(),tColors=[],sTime=millis()}function mouseClicked(){if(!0===active_canvas&&mouseX<=cWidth&&mouseX>=0&&mouseY<=cHeight&&mouseY>=0){if(1==mode){displayPoints=!0,css_buttons.displayPoints(!0);var e=round(mouseX),a=round(mouseY);1==snapping&&(e%snappingAccuracy<snappingAccuracy/2?e-=e%snappingAccuracy:e=e+snappingAccuracy-e%snappingAccuracy,a%snappingAccuracy<snappingAccuracy/2?a-=a%snappingAccuracy:a=a+snappingAccuracy-a%snappingAccuracy),unique_vertex(e,a)&&updateHashSpace(e,a,!0)}else if(4===mode){for(var s=triangulations[0],t=0;t<s.length;t+=3)if(pointInTriangle(verticesHashTableFlat[s[t]][0],verticesHashTableFlat[s[t]][1],verticesHashTableFlat[s[t+1]][0],verticesHashTableFlat[s[t+1]][1],verticesHashTableFlat[s[t+2]][0],verticesHashTableFlat[s[t+2]][1],mouseX,mouseY))if(console.log("T: "+t),tColors[t]>=0)tColors[t]=-1;else if(-1==tColors[t]){var i=[0,0,0];i=averageColor(verticesHashTableFlat[s[t]][0],verticesHashTableFlat[s[t]][1],verticesHashTableFlat[s[t+1]][0],verticesHashTableFlat[s[t+1]][1],verticesHashTableFlat[s[t+2]][0],verticesHashTableFlat[s[t+2]][1],colorAccuracy),tColors[t]=i[0],tColors[t+1]=i[1],tColors[t+2]=i[2]}delaunayDisplay(triangulations[0],triangleCanvasLayer)}else 5===mode&&(-1==selected_triangles[0]?selected_triangles[0]=triangle_id_from_point(mouseX,mouseY):-1==selected_triangles[1]&&-1!=selected_triangles[0]?selected_triangles[1]=triangle_id_from_point(mouseX,mouseY):-1!=selected_triangles[1]&&(console.log(selected_triangles),fliptriangles(selected_triangles[0],selected_triangles[1]),selected_triangles=[-1,-1]));recordVertices()}}function erase_vertices(e,a,s){for(var t=floor(round(e)/hashing_size)*hashing_size,i=floor(round(a)/hashing_size)*hashing_size,r=(findIndexFromHash(hashCoordinate(t,i)),[]),n=-ceil(s/hashing_size);n<=ceil(s/hashing_size);n++)for(var o=-ceil(s/hashing_size);o<=ceil(s/hashing_size);o++){var l=t+hashing_size*n,c=i+hashing_size*o;inCanvas(l,c)&&r.push(findIndexFromHash(hashCoordinate(l,c)))}var d=[];for(n=0;n<r.length;n++)for(o=0;o<verticesHashTable[r[n]].length;o++){var u=verticesHashTable[r[n]][o];squaredist(u[0],u[1],e,a)<=s*s&&d.push(u[0],u[1])}for(n=0;n<d.length;n+=2)updateHashSpace(d[n],d[n+1],!1)}function snapVertices(e){var a=JSON.parse(JSON.stringify(verticesHashTable));generateHashSpace(),e||(e=20);for(var s=0;s<a.length;s++)for(var t=0;t<a[s].length;t++){var i=!0,r=!0,n=a[s][t],o=[n[0],n[1]];n[0]==cWidth&&(i=!1),n[1]==cHeight&&(r=!1),i&&(n[0]%e<e/2?o[0]=n[0]-n[0]%e:o[0]=n[0]+e-n[0]%e),r&&(n[1]%e<e/2?o[1]=n[1]-n[1]%e:o[1]=n[1]+e-n[1]%e),unique_vertex(o[0],o[1])&&updateHashSpace(o[0],o[1],!0)}recordVertices(),verticesCanvasLayer.clear(),draw_all_points(verticesCanvasLayer,verticesHashTable)}function delaunayDisplay(e,a,s,t,i,r){var n=triangulatedVerticesFlat;if(s&&(n=s),0===flower_step&&t&&(uncoloredTriangleCanvasLayer=createGraphics(cWidth,cHeight),colorIn(),sTime=millis(),!0===displayImage?(a.image(img1,0,0,cWidth,cHeight),uncoloredTriangleCanvasLayer.image(img1,0,0,cWidth,cHeight)):(a.fill(255),a.rect(0,0,cWidth,cHeight),uncoloredTriangleCanvasLayer.fill(255),uncoloredTriangleCanvasLayer.rect(0,0,cWidth,cHeight)),a.fill(256,256,256),a.stroke(10,10,10),uncoloredTriangleCanvasLayer.fill(256,256,256),uncoloredTriangleCanvasLayer.stroke(10,10,10),n.length>0))for(var o=0;o<e.length;o+=3)construct_shape_from_vertices(n,a,e,o),construct_shape_from_vertices(n,uncoloredTriangleCanvasLayer,e,o);if(t){var l=1;r&&(l=r);for(o=3*i;o<3*i+3*l;o+=3)o<e.length&&(tColors[o]>=0?(a.fill(tColors[o],tColors[o+1],tColors[o+2]),a.stroke(tColors[o],tColors[o+1],tColors[o+2])):(a.fill(256,256,256),a.stroke(10,10,10)),n.length>0&&construct_shape_from_vertices(n,a,e,o))}else{!0===displayImage?a.image(img1,0,0,cWidth,cHeight):(a.fill(255),a.rect(0,0,cWidth,cHeight));var c,d;l=1;t?r&&(c=3*i+3*(l=r)):(d=0,c=e.length);for(o=d;o<c;o+=3)tColors[o]>=0&&0==noColors?(a.fill(tColors[o],tColors[o+1],tColors[o+2]),a.stroke(tColors[o],tColors[o+1],tColors[o+2])):1==noColors?(a.fill(256,256,256),a.stroke(10,10,10)):-1==tColors[o]?(a.noFill(),a.noStroke()):(a.fill(256,256,256),a.stroke(10,10,10)),n.length>0&&construct_shape_from_vertices(n,a,e,o)}}function construct_shape_from_vertices(e,a,s,t){if(0==displayMode)a.triangle(e[s[t]][0],e[s[t]][1],e[s[t+1]][0],e[s[t+1]][1],e[s[t+2]][0],e[s[t+2]][1]);else if(1==displayMode){for(var i=[e[s[t]][0],e[s[t+1]][0],e[s[t+2]][0]],r=[e[s[t]][1],e[s[t+1]][1],e[s[t+2]][1]],n=i[0],o=r[0],l=-1,c=-1,d=0;d<i.length;d++)i[d]<n&&(n=i[d]),i[d]>l&&(l=i[d]),r[d]<o&&(o=r[d]),r[d]>c&&(c=r[d]);a.rect(n,o,l-n,c-o)}else if(2==displayMode){var u=circumcenter(e[s[t]][0],e[s[t]][1],e[s[t+1]][0],e[s[t+1]][1],e[s[t+2]][0],e[s[t+2]][1]),h=u[0],g=u[1],v=2*sqrt(squaredist(e[s[t]][0],e[s[t]][1],h,g));a.ellipse(h,g,v,v)}else if(3==displayMode)a.triangle(e[s[t]][0],e[s[t]][1],e[s[t+1]][0],e[s[t+1]][1],e[s[t+2]][0],e[s[t+2]][1]),a.triangle(e[s[t]][0]+random(-sd,sd),e[s[t]][1]+random(-sd,sd),e[s[t+1]][0]+random(-sd,sd),e[s[t+1]][1]+random(-sd,sd),e[s[t+2]][0]+random(-sd,sd),e[s[t+2]][1]+random(-sd,sd));else if(4==displayMode){for(i=[e[s[t]][0],e[s[t+1]][0],e[s[t+2]][0]],r=[e[s[t]][1],e[s[t+1]][1],e[s[t+2]][1]],n=i[0],o=r[0],l=-1,c=-1,d=0;d<i.length;d++)i[d]<n&&(n=i[d]),i[d]>l&&(l=i[d]),r[d]<o&&(o=r[d]),r[d]>c&&(c=r[d]);a.rect(n,o,l-n,c-o),a.rect(n+random(-sd,sd),o+random(-sd,sd),l-n+random(-sd,sd),c-o+random(-sd,sd))}}function circumcenter(e,a,s,t,i,r){var n=s-e,o=t-a,l=i-e,c=r-a,d=n*n+o*o,u=l*l+c*c,h=n*c-o*l;return[e+.5*(c*d-o*u)/h,a+.5*(n*u-l*d)/h]}function loadData(e){null===e&&alert("No recently saved data"),triangulations=e[0],tColors=e[1],verticesHashTable=e[2],verticesHashTableFlat=e[3],triangulatedVerticesFlat=e[3],cWidth=e[4],cHeight=e[5],myCanvas=resizeCanvas(cWidth,cHeight),triangleCanvasLayer=createGraphics(cWidth,cHeight),verticesCanvasLayer=createGraphics(cWidth,cHeight),$("#gamedisplay").css("width",cWidth),$("#gamedisplay").css("margin-left",-cWidth/2),triangulize(),displayPoints=!0,css_buttons.displayPoints(!0);for(var a=0;a<triangulations.length;a++)delaunayDisplay(triangulations[a],triangleCanvasLayer);recordVertices(),verticesCanvasLayer.clear(),draw_all_points(verticesCanvasLayer,verticesHashTable)}function saveData(e){var a="art1";e&&(a=e);var s=[triangulations.slice(),tColors.slice(),verticesHashTable.slice(),triangulatedVerticesFlat.slice(),cWidth,cHeight];localStorage.setItem(a,JSON.stringify(s))}function expandVertex(e,a){return[e[0]*a,e[1]*a]}function lineAngle(e,a,s,t){var i=0;if(s-e>=0)i=0,t-a>=0&&(i=360);else i=180;return-atan((t-a)/(s-e))+i}function expandImage(e,a){var s=cWidth*e,t=cHeight*e;sd*=e,downloadcanvas=createGraphics(s,t);for(var i=JSON.parse(JSON.stringify(triangulatedVerticesFlat)),r=0;r<i.length;r++){var n=expandVertex(i[r],e);i[r]=n}downloadcanvas.noSmooth();for(var o=0;o<triangulations.length;o++)delaunayDisplay(triangulations[o],downloadcanvas,i);if(1==a){downloading=!0,downloadcanvas.elt.id="downloadthiscanvas";var l=document.getElementById("downloadthiscanvas");l.getContext("2d");l.toBlob(function(e){saveAs(e,"PolyArt.png")}),$("#downloadthiscanvas").remove(),downloading=!1,console.log("Finished downloading")}sd/=e}function triangulize(){var e;verticesHashTableFlat=verticesHashTable.reduce(function(e,a){return e.concat(a)});var a=(e=Delaunator.from(verticesHashTableFlat)).triangles;triangulations[0]=a,half_edges=e.halfedges,displayTriangulation=!0,css_buttons.displayTriangulation(!0),triangulatedVerticesFlat=JSON.parse(JSON.stringify(verticesHashTableFlat))}function fget(e,a){var s=((a=parseInt(a.toFixed(0)))*d*cWidth+e)*d*4;return[pixels[s],pixels[s+1],pixels[s+2],pixels[s+3]]}function inCanvas(e,a){return!(e>cWidth||e<0||a>cHeight||a<0)}function sign(e,a,s,t,i,r){return(e-i)*(t-r)-(s-i)*(a-r)}function pointInTriangle(e,a,s,t,i,r,n,o){return bc1=sign(n,o,e,a,s,t)<0,bc2=sign(n,o,s,t,i,r)<0,bc3=sign(n,o,i,r,e,a)<0,bc1==bc2&&bc2==bc3}function averageColor(e,a,s,t,i,r,n){var o=[e,s,i],l=[a,t,r],c=o.reduce(function(e,a){return a<=e?a:e}),d=o.reduce(function(e,a){return a>=e?a:e}),u=l.reduce(function(e,a){return a<=e?a:e}),h=l.reduce(function(e,a){return a>=e?a:e});if(1==quickColor)return quickAverageColor(e,a,s,t,i,r);for(var g=0,v=0,p=0,f=0,m=0;m<h-u;m+=n)for(var C=0;C<d-c;C+=n)if(pointInTriangle(e,a,s,t,i,r,c+C,u+m)){var y=fget(c+C,u+m);g+=y[0],v+=y[1],p+=y[2],f+=1}return 0==f?quickAverageColor(e,a,s,t,i,r):[g/f,v/f,p/f]}function quickAverageColor(e,a,s,t,i,r){var n=fget(e,a),o=fget(s,t),l=fget(i,r);return[(n[0]+o[0]+l[0])/3,(n[1]+o[1]+l[1])/3,(n[2]+o[2]+l[2])/3]}function squaredist(e,a,s,t){return(s-e)*(s-e)+(t-a)*(t-a)}function construct_css_buttons(){this.displayPoints=function(e){!0===e?($("#displayPoints").removeClass("active"),$("#displayPoints").html("Hide<br>Points")):($("#displayPoints").addClass("active"),$("#displayPoints").html("Show<br>Points"))},this.displayColor=function(e){!0===e?($("#displayColor").removeClass("active"),$("#displayColor").html("Hide<br>Colors")):($("#displayColor").html("Show<br>Colors"),$("#displayColor").addClass("active"))},this.displayTriangulation=function(e){!0===e?($("#displayTriangulation").html("Hide<br>Triangles<br>"),$("#displayTriangulation").removeClass("active")):($("#displayTriangulation").html("Show<br>Triangles<br>"),$("#displayTriangulation").addClass("active"))},this.displayImage=function(e){!0===e?($("#displayImage").removeClass("active"),$("#displayImage").html("Hide<br>Image")):($("#displayImage").html("Show<br>Image"),$("#displayImage").addClass("active"))}}function undo(){indexPos-++stepBackNum<=0||stepBackNum>=max_undo-1||stepBackNum>=maxStepBackDist?($("#undo").addClass("disabled"),$("#undo").css("cursor","not-allowed"),$("#redo").removeClass("disabled"),$("#redo").css("cursor","pointer")):($("#undo").removeClass("disabled"),$("#undo").css("cursor","pointer"),$("#redo").removeClass("disabled"),$("#redo").css("cursor","pointer")),indexPos-stepBackNum<0||stepBackNum>max_undo-1||stepBackNum>maxStepBackDist?stepBackNum--:(undoState=1,verticesHashTable=JSON.parse(JSON.stringify(storedVertices[(indexPos-stepBackNum)%max_undo][0])),totalpoints=storedVertices[(indexPos-stepBackNum)%max_undo][1],verticesHashTableFlat=verticesHashTable.reduce(function(e,a){return e.concat(a)}),verticesCanvasLayer.clear(),draw_all_points(verticesCanvasLayer,verticesHashTable))}function redo(){if(--stepBackNum<=0?($("#redo").addClass("disabled"),$("#redo").css("cursor","not-allowed"),$("#undo").removeClass("disabled"),$("#undo").css("cursor","pointer")):($("#redo").removeClass("disabled"),$("#redo").css("cursor","pointer"),$("#undo").removeClass("disabled"),$("#undo").css("cursor","pointer")),stepBackNum<0)return stepBackNum++,void(undoState=0);verticesHashTable=JSON.parse(JSON.stringify(storedVertices[(indexPos-stepBackNum)%max_undo][0])),totalpoints=storedVertices[(indexPos-stepBackNum)%max_undo][1],verticesHashTableFlat=verticesHashTable.reduce(function(e,a){return e.concat(a)}),verticesCanvasLayer.clear(),draw_all_points(verticesCanvasLayer,verticesHashTable)}function recordVertices(){0==undoState?(indexPos++,storedVertices[indexPos%max_undo][0]=JSON.parse(JSON.stringify(verticesHashTable)),storedVertices[indexPos%max_undo][1]=totalpoints,indexPos>=4*max_undo&&(indexPos=indexPos%max_undo+max_undo),maxStepBackDist>=50||maxStepBackDist++,$("#undo").removeClass("disabled"),$("#undo").css("cursor","pointer"),$("#redo").addClass("disabled"),$("#redo").css("cursor","not-allowed")):($("#redo").addClass("disabled"),$("#redo").css("cursor","not-allowed"),$("#undo").removeClass("disabled"),$("#undo").css("cursor","pointer"),indexPos-=stepBackNum,maxStepBackDist=max_undo-stepBackNum,stepBackNum=0,undoState=0,indexPos++,storedVertices[indexPos%max_undo][0]=JSON.parse(JSON.stringify(verticesHashTable)),storedVertices[indexPos%max_undo][1]=totalpoints)}function resize_poly_canvas(e){cWidth=floor(cWidth*e),cHeight=floor(cHeight*e),triangleCanvasLayer=createGraphics(cWidth,cHeight),verticesCanvasLayer=createGraphics(cWidth,cHeight),resizeCanvas(cWidth,cHeight),$("#gamedisplay").css("width",cWidth),$("#gamedisplay").css("margin-left",-cWidth/2),cWidth>.9*window.innerWidth?$("body").width(cWidth+100):$("body").css("width","auto"),verticesHashTableFlat=verticesHashTable.reduce(function(e,a){return e.concat(a)});var a=JSON.parse(JSON.stringify(verticesHashTableFlat));generateHashSpace();for(var s=0;s<a.length;s++){var t=expandVertex(a[s],e);a[s]=t,updateHashSpace(floor(t[0]),floor(t[1]),!0)}completedFilters=!1}function fliptriangles(e,a){var s=[];s.push(triangulations[0][e]),s.push(triangulations[0][e+1]),s.push(triangulations[0][e+2]),s.push(triangulations[0][a]),s.push(triangulations[0][a+1]),s.push(triangulations[0][a+2]);for(var t={},i=[-1,-1,-1,-1,-1,-1],r=0;r<6;r++)isNaN(t[s[r]])?t[s[r]]=1:t[s[r]]++;for(var n in t)-1==i[0]?1==t[n]&&(i[0]=parseInt(n),i[3]=parseInt(n)):1==t[n]&&(i[1]=parseInt(n),i[4]=parseInt(n)),-1==i[2]?2==t[n]&&(i[2]=parseInt(n)):2==t[n]&&(i[5]=parseInt(n));for(r=0;r<i.length;r++)if(-1==i[r])return void console.log("not adjacent triangles");console.log(i),triangulations[0].set(i.slice(0,3),e),triangulations[0].set(i.slice(3,6),a),tColors=[],finishedColoring=!1}function triangle_id_from_point(e,a){for(var s=triangulations[0],t=0;t<s.length;t+=3)if(pointInTriangle(verticesHashTableFlat[s[t]][0],verticesHashTableFlat[s[t]][1],verticesHashTableFlat[s[t+1]][0],verticesHashTableFlat[s[t+1]][1],verticesHashTableFlat[s[t+2]][0],verticesHashTableFlat[s[t+2]][1],e,a))return t}var downloadcanvas,half_edges,origcWidth,origcHeight,hashing_size=50,selected_triangles=[-1,-1],sd=15,css_buttons=new construct_css_buttons,maxStepBackDist=0,indexPos=-1,stepBackNum=0,undoState=0,canvasScale=1;